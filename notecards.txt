Class - The blueprint for a object\
Object - An instance of a class\
Abstraction - Separates implementation from interface\
Scope Resolution Operator - Tells the compiler that the coming function call is part of the prepended class\
Dot Operator - Used to reference individual members of classes and structures. Is applied to this object\
Arrow Operator - Used to reference individual members of classes or structures. Is used with a pointer to an object\
Visibility Levels - Public and Private\
Public Visibility - Allows data members to be accessed by other clients\
Private Visibility - Protects data members from being accessed by other clients\
Constructor - Member function that initializes an instance of a class\
Constructor Execution - Executes when an instance of a class is initialized\
Default Constructor - Constructor called when no parameters have been given\
Parameterized Constructor - Constructor that has been provided parameters\
Friend Function - Can access protected or private data members and methods\
Copy Constructor - Allows you to create an exact copy of another object\
Shallow Copy - Copies data members from the source object directly to the destination object\
Deep Copy - Copies data members from the source object to destination object and handles dynamic memory\
Destructor - Deallocates dynamic memory used by an object at the end of lifetime\
Operator Overloading - Defines the behavior of an operator on an object\
Overloaded Assignment Operator - Equals operator, returns a reference to this object, *this\
Const Function - Generally used as observers, cannot modify any of an object's data\
Const Member Data - Data that cannot be modified\
Ctor Initializer - Used to declare default values in an object\
Static - Declares members that are not bound to class instances, rather to the class itself\
Static Member Function Limitations - Cannot access *this pointer and cannot access non-static members\
